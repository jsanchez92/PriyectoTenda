<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACkHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAB9eSURBVHja7Z0JeFvFtcevQ0JCgLAToFD6eKXwICzZQyA0ZHHiRZIlWY6dxZskZw9J
        vEiyndiJZTmBlCWUAo9StlIKLVBaSkvhQVhbSiCFJJbtsJStvC7sa4GXeefcO1c4q+VY0lxZ/9/3/T/Z
        JDi2fP9nZs6cOaNpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQOLxBLTS0lqtoCCoORxB/bUn8d9j2e312sUXX6Hl5DTj
        jQTA6rBhc3Obuhk9EDO13R7g/z6YNIw+P4Z0Aukk0slS/PFw/jP+Ow5HaPDcuUv3GiBmzmzS/y0AgGIc
        jnpSIxkz1M3swQFk4qMcjsCZ9LmNtIy0gfRT0h9Iz5LaSa+Q3pR6Rf43/rOH5N/dIP9f/hr8tY5yOkMD
        zH/H6WQ1khAMAEgZhvkCsZHe6eQpfugwMuQI+rySdC3pKdLbpI9JO0niALVTfo235de8Vv4bI1yu0GEF
        BbWxwONy1enfFwAgKcYP6aPtN2v10BB6PZ+0kvRbadIv+2D2ePWl/Ld+K/9t/h4OMWchHAT4FQCQkGk+
        mz0gp/e1PPU+nlRMn/+M9FYfR/i+aqcMBneRimmJcJzdHjIDlC4AwAHAI6nbXaObye3WR/5TSEtJz5A+
        V2j6fekz0tMyb3CK220sDzyeavpZ6vALBSAe7PY6rahotRxFdeNzdn4J6XnSVxY0/u76Wn6vFAhCw+32
        Bj1hmJ3dRMGgFr9gAPY96gdjIgMNJRWSnkgT4++ur+T3XkRLg6HGUgbLAgD2wONZoe+t86ifn1/Hr2eT
        biZ9lIbG3128i3AL6dzCwmr9Z7TZauhnbsYvHgBjZKzTs/z08SFkkAq5Jy/6mTpIPp7ZcFLT7TaKlQDI
        8Cl/yJzyf1vus3/SD81v6lPSdRTovt297BiAjMPcz7fZ9NfxpEf7sfF3F/2sgfFudyBWsgxARpnfOHDT
        kEUf20nRDDK/qU5Sgd1el2UGQwAyZM2v1+wfJNf772Sg+U3Rzx6ooPdjINc98FIIgH4/8tO0fyC9LqLP
        381g85t6j7TY7a4bJHMheFBA/x35aaQzzf8+zB/TBxwEKAAMxHIA9MORX9/i06ZMCWXJaf97MP1eZwKV
        +fkNWWY/AwD6wcgf0KvfCgr0uv4C0t9g9v3lBIIF3GeAAwCOF4O0Jju7RsvPj52ZnyCLYWD0nguGxhvL
        Jc6XNONBAulJYWG9mfjjwpdNMHdv6gT49GNAb3gCQNom/eShnutg6l7rR0ajESQFQZrBB3vs9qBWUtLA
        D69XlsDC1L0vG/Y6natlPqAGDxZID7g/nhy5zsW6v8/5gHN5F8VuX40HC1gfY8tP11B5DBZG7ptuphnA
        UNnxGA8YsPrav8E84OKRZ+Fh4r73E/C4XEEtLw/NRIDFR3859R8uu+HAwInR49xezFgKIAgAi8Jtu+12
        veBnSZq28bJye7ElRUV1ms2GAAAsOfrHrs86RTbFhHETq800AzjZeI/RZRhYLgAEzC6+S2VnXJg28bOA
        xUaZMIqDgKXMXy/X/6HjZd9+GDY5esrpDB6HY8PAYpn/VXL6HyqSF2TArMm7fMRjXk4KgGXW//RA8l19
        d8KkSdedDkdgCJqJAstk/mXy7zx5Vx9Mmlzxe3yOURiEq8mB8gBgJKXkTbk7YdCk6/9Iy7ncOj+/AQ8g
        UD/9Jx1K+g3MmTLdL99zPIBAHTZbtQwAgbMx/U+p3iSdZdyrUI0HEahh0qQyMwCU0euXMGbK9G9SKW+9
        Tp1ajgcRqJr+8zn1ugH0MF4DU6Zc1zgcwQFYBgCFCUB9++8oHPxRdUAoeCQCAFCaAKQAcAbW/2q2A+V7
        jwcRpB7u+Ct3AHJx7l+JPpLvvVZe3owHEqSWs86abwaApdj/V1YPsJh/B0IIPJAgtdhsAa2kRK8CvAxm
        VKZ13CYM5wKAqvX/YHr9KYyoTLc5nYGDkQcACnYA9KurhtHD9xCMqEy/Ix2OAACUzABIx5D+DCMq05/k
        7wAPJFASAE4gRWFEZdouG7DigQRKAsBJpFdhRGV6Rf4O8EACJQHgZHkwBWZUo9dJ30IAAAgACAAAKFkC
        vAYjYgkAMjcJ2A4jKtM2JAGBygBwLLYBsQ0IMjIAoBDIAnqwoCCEQiCgZgbgcAS4FPgOGFGZbicNRgAA
        KYcvqZw7V+8GfDmMqEzr8/MbNe4QDEBKOe00sx9gcBmOAyvRTnkLs1ZfPxoPJEgt3RqC5KEhiLKGIDn8
        O/B4VuCBBMp2As4kvQ1DKrkh6HtY/wNl8P10DkcATUHVaFNBQQhNQYHKABDSbLZ6bk39Qxgy5do4c2Zo
        AHcEAkAJeXmrzWVAOS4GSfnFIPP4YpCcnAo8iEANfDstrgbD1WAgwxOBDod+UeWvYcyU6VekoVj/A+Xw
        FdVudx0HguWyVTUMmvx24MtcLh79EQCAZZYBwXOwDEiJ3nA6AyPkzAsPILDCMiBEqh9CD+XPYNCk66ey
        HTsePGCV3YBG/XQgPZSFpM9g0qTpU5KL32uXazUePGClZUCAi4KOowf0SRg1aXqCRv9jjUtZ6vHgAevA
        F4VwYRA9nAtJX8GsCRe/pwv4FKbbjek/sFweIGBuCXKTyudg2ITrWbP/H+8AAGDBIMDbgQ3mLACVgYkT
        v5cLHQ7OtdTiQQPWngWQjic9BuMmTI/S8up4471F8w9gYTyekMYHVIxsdfBDmLfP4vfQyXv+hYVI/AHL
        JwODekLQ5QocQg/uj2HgPutGpzM0hKSxALA8+flNsjgoOEJeYAkjH/jln2dzUC0qgvlB2iwDVmhGrbqe
        EygjfQIz91rcZq3Ubm/QZ1R5ecj8g7RbCujipcA1MHTvG37QezfEKPoJ4IEC6bgUqNUPrMhLRB+BqeMW
        v1cn85rf5WrAgwTSk/LyZnqAV5lbg2ORD4hLfNfiGN5S5d2UnJyleJBA+mKUB9fr01h6sO3oILxf8Xtj
        83iayPx1eiIVgLSHH2ReCuTnr87ixBbpXzD7HuL3pCw7uy6Lzc8CoB8FASMpWFgYOIg+nk96H6aP6T0+
        6FNQUHcQGn2AfgsHAPmADzQeeMwESO/K92KgzJXgQQH9OSdgjHB2uz4TKMvwnMDbRkv10EEwP8io5YBx
        cGgF5wRsMvOdgdn+UH5u7qosmB9kYBDQOwhphYX65SKjSQ9nkPn/h5ZD4+ShKZgfZOpywAgCHAzIECfL
        isGP+3l57w+NIp9gLDEKQAYnBkNacXGTDAShIfKasf5YMBSV630ujdby8hqQ7QeA4YrBvDz9chE+Rsyv
        fNXYTf2kn8CH8mcZ4XLVy1G/VrPZmvGLB2DP5GDIPD/AI2WB7Cz07zRt4/WY0cxD740gZzkY9QHYJ9xR
        aMaMOlkv0GC2GufCoT+nSZ/Br+T3uoiC2fFmoq+wsAkXeQIQ/2ygjqbKK+VugX7xyIlkJL8cVa24NPhA
        fm9c1HMSt+9m43NAQ6IPgDix22v0E3DmdNksjeXkGb1yW2w3N8m02EWkO/nSDlIJZ/jpex8iDz/FMv0e
        T73mduNwDwB74HTWkDkujZmeb72hjw+WffCnkRpI95E6Zd38lxad+vMsoEt+r6tIuRwQ3O7gIDMYGMuB
        aj0RCEAGj/R1Wm5udbcLRXTT8zbgf5F8pFvlduCHab7vz1WOPyFV0kzgLPp5h/LPas4MiouXUfBDMAAZ
        s7YPmleImSXBB0vTLyLdRXq9n14txrOWN0n3cp7A6Qyd6Xbzzx6SwQBdf0E/xWZr1KZOvdLc3qP/8jqv
        6Xl6X0S6hfSaxdb0qVgu/JV0G2kW6cQpUxbFgqIQAv0AQH9Y2/P9AHWxwz92e5BH+/NITaQtpM9xHFh/
        D54nNZNGydyH/p7Z7bV6XgSANJvm12n5+cu1b+rdA4fSa7Yc7d+C6fept2TV4HTSod8sk1bpbdUAsPyI
        zwktM5PvcgWPlFeE3YsOQL0Sv1f3GJWQoWFGojSg5eSswNIAWNH4fB9goFtiL3i4NP7vcSlIn3cRfm0E
        gsBh/D5zAtXhWE7vcTMePGAF8we7tfrST/Px3vev+vmx3lTrI2NGEJrmcNQP7nYLMx5AoG6d73Yb+/hF
        RdVZFARGy8tAMdVPbufgG0kjHY7aLOP0ZC1KjUHq4GOsLleNzFI3cAA4hT5eLbe1YNLU6FVSiLcPeUnA
        AcDtbsQlIiDZo75Zl6837xjMR11Jz8haeBgztfqa9CTnBygADOaCIpsN24YgCUye3Kzv57P55Xr/DNK1
        mO5bZsdgI+k0bjhiXMAS1JqbkSQECYCnmDZbgxz99SIVrt57EcaznDbzzgv9vgYZgXq1/rsDoE9TfrNW
        nR4mbtp5OUZ9y98wtJ57J3BNhnnmAoBeT/ndbr1TrzZzJu85ByeRNmGtnxbiMxV/IF1gBICAniAEIC64
        ks9mWy339/V9fZ88rANzpZde5puXaNk2mAuIPJ7VmA2Anqf83JVXTh25F98PUNCTpnLo+qjAHozYp9Yd
        Nff2Zs3X0fqNosarn15XvtCqLdkagQEyO9nXfYsveDrpFxl2RDedjS7I6Ib4Y3dQOGeFhGs2aW7oK7ev
        /mdzbm4+z/9q5EQyPSlyHAWAI0mHLN7aklXZaQaGcEx1/1quLXgZOwkZgVnK63LpLbkvoI+fgrksbnpp
        dmdRSLgr6oWnukEUt60Sc65vEnPvaBal968R5Q+vFRWbWkTF0y3CuzX8dzL5a6Qu0hbSJtIvSBtJtRQM
        XL7O8Agy/9G+aMtB3m6zhbJXfqB5u9pglP5qfha35yLz58obbGAyq5qePqZRXRTVNYrZ1zSJ0vvWiIpn
        yOB/CQtfe6vwdXVTZzd19KhPSe+QniZdS5pHOsPfGRnij7YYwaAzrJVvbdWaBWYG/WbNb5SR1g2gj4tl
        Oy6YzYJTfGdJSHhqG8WcG5pE+SNrhffFsGHsrl6ZvDf6N+mvpJ+TykmnVu1oztJzB7RkqHhprVb1yjqY
        KH3NH7uUc6Dst/8PGM5ixufRvqxeFLeuEmUPrDVG+c6kGX5/+pK0jbSONMbbGRmkJxB5efBqRGt+DDOC
        tBv5jQs3agfKW3feg+msNeKz8Us2rBblj64Vvu3dRvoO5XqbdD1pQlVn60AvzQa8tDTgV5AW5jc78tYN
        lJ14YX4LmZ+n+sWRVTTNbzHW9NYw/d70N9IGzhMs3Nqm5whKX1+j+aPYTrR8tr+gYBWv+atQ1muhUd8Z
        FJ4VDaL03jXCt02O+B1poe2khb7OyBGcG6jsaMVswKprfq4Pb2x0cRCYgzW/tUb92VevFpXPha084u9P
        X5DuIp2/UE8SRjQ/goCVinwCegcfu30Nm9+BzrzWMX/hQhr171lj9el+vGonlVR1tQ3yd0Q03/YwdgpU
        YxT31Gp8VpxmARfLGnGYT7Voyl8UatQLdfqB8bvrfVKTPxoZxluGs++8UvN1tcCIKvB4VmiVlUHz0s2z
        5L31MJ/q9b47qFftpfGUP55twxv1suNoRCvvDGuVSA6qmPrHLqHka7gegAEtsN4vDIqSK1d/U8jT0W+1
        k3QP6TucD/BuX6tVRdfClKnL+AfMYp+hsn0XzvKrNr8nKGZvJPO/1O/N312/8VMQ8HZENP/Ta7Xy7ZfB
        nKko9OEAUFRUw62jLyV9BhMqFk37S65azYdyMsn8pu4jfcvfEdYWbW/UPOJumDR5I3+o+5l+PtzzDgyo
        PuHHxT2xUt6OjNRtvmjkaF97WPNvWwOjJnfLL2ie6X8OBlQ/9feE6kXlcy2ZbH7W16TLSEO4TsDXhaRg
        Uqb+snf/ofKWWRhQpexB4fDVitJHmzPd/KY+IVVVimc0LwUAbzQM0yYKvjWW1/3TpulBYAHW/epH/lz3
        paL45yGYf1fxEeML/TQLKN+KpUDC8Pku1w/60Og/hh7AV2BCtcqesVjYI8uEtz0M0++pP1BQHG50HMJS
        IAHr/ti13MNId8OAajUje4m4pLRSlP2xCaP/vvMBq/zRdQO4ZHh+OyoF+1Dt16xn/GfN4pt6gwtJn8OE
        6pQzc5mYOGW28NxZK/xdEeVm83e2kSI0E2kxPu8yPrdAEHiLNNFLSwFNCBj5QLHZVpqdfUbQA9gBE6pT
        Xt4KMWF8sZi+0ie829Ru+bHJK7avEXkPe8XIm6aIMzeOFSOuv1Bc8qtZYu6WeqsEgTv90dZDeSlQ2Yml
        wAFM/c3mHkG+s+86mFCdbLYaceHEuWL8tCIx+8F6paM/m5tNPuK6C8XgJUOF5tWEVmnooPkDxcnh00XB
        44utEAQ+Jrmqoi3a3B0bYOjeZ/7rzT7+OaR3YUQ1cjgC4vvfrxCjRhWInFULjKO9Co3FIz+bP8ufZZjf
        t5soEAxvOlXM+lO1FYLAgzRTOsK4pATbgr3Y84+N/seQHoIR1WnatAVi9CinGD/VI2b/TvXo36ZP+2Mj
        v2/fGvWTqVapDXBxAOCZAOhFya+s+vOSvoARFSX9ci4V48Z5xMjzHSK7xi+828OKk34Rfc3fk/n5z0+g
        WcC8vzQKn/pZwD0+zgVEW3FOoDcVf6RvkZ6FEdXIbq8VEyfOESNHOsTYi9xi1i8DyjP/le0t4oyrxxhr
        /h4CwOHVR4nZmwNWWAb8i3SRj5YA87esgsHjSf4VFnL2P1hN+hpmVKMpU/y07nfqo//3584TFc+vVb7v
        X7l9rTj9ypFxBYBDVwwTJc/VWWVHYH35a1dkeTtxBdl+cblio/+ppJdgRFVT/2Vi7NhCPfE3anSBsG1Y
        aomin94HgIBVAsAWb7T1RL6TcOmOjTD6/gJATk7QHP1xe6+SqX+duOiiuYb5RxaI8Zd4xJyHGixR+JPG
        AYCTgXa+mXhOewBG3/u2X2z0P4X0AsyoRtOnLxSjRzv1AKBP/8tKRcWWtZgB9F0b5r+2LsuHluL7qvrj
        izz1ALCY9BXMqKLgp1pMmFBsjP5yBpAXXmSZmv80DwBPkY7mLUGwl8w/H/oh8b7/EzCjysTfN+YfM9Et
        PHfWWWL63w8CwN990daRek3A5htg+t33/eX03036FGZMvfLzV4rx42ftEgAmTC8S8x5fjRlAgq4k90Zb
        S/WzAW8thul33frT+/sfQg/iXTCjGl1ySbfR31z/z6P1/wtrEQASp3UVr0Q0fzuWAXsp+w2Mo9f/hRlV
        jP7Vu47+HADOc4gZdVXKa/9jIiNXtvcmABwhSjZbLgD80hcNH+LDuYBdA4DLdSkHgWaYUY2mTp2vF/10
        DwC8BMhfv0T4d0SSWtvv143doo/u+xWZv2xrk/juFefHFwCWDxOznq2J+2unqJ/Ac6RjkQjcbe1Pr8Nx
        tZe6kt8LLpi9q/lJo8c5hfO/VyQlAOx+np/Le3lk70ls/mE1R/d8FoA0cOEg8R+XjaD/b1SPX/d7V41K
        VT+BN/g2IQQAyYwZfjP550TyT4VCYsaMJWL0aNceo//YC92i6O7E7wAY5/kb9nqePy7FYf7uR4N7oxT0
        E/gnLWXGIADEZgBBvuH3IHoYfwQzqjnrf/HF5WR6xx4BYNzFhaLkgcQf/+WR/5zr93OeX7WS20/gQ19n
        6zQEAN38Nd0r/7bDkGq2/vi47+7Tfz0AcAnwI43C16XmPL9qJamfwKckJwIAUVg4zwwARWj2qWb6P23a
        N2W/uwcAbgBS+mRiawDiPs+vWsnrJ/A5qRgBIDb9D2L6r3D6f9FFpXtO/80AMK1IlD6V2Nbf3L2XG3j2
        mMW3QADgZOPszcFELwO+IM1FANBijT+G4+CPxab/3WcATyS+CpCz7ekQAI6pP1HMfSHhOwKYAZiVfzIA
        TCF9AEOmfvqfnb1o79N/MwBM8Yh5m1YldgnQ1aZvtXG23dIBgALUmRvHxOoDEnwsuAABwGFc800PYyPM
        qEZGp1/HPgPAuMmFYvbvG4QvgbsA5hYgb7VZdhZAo//Q5cNE/iP+ZOwCfESamfEBoNstv/fDjKqKf0r2
        bn6zDoD7AN4TSEodAO+z81ababheqZdm7pUqDfNf/EuX8EaT0gCV+wNOQAAwpv/fIb0MQ6q55SfW8msf
        AWDMBJdw31qTlKPAHARmPVutb7Vxtp0bePLhnf3rCL28lyv84jF/ln+AGHrp4cb/18PXPoz+Dq/5uSKR
        R/4kmd+4MqwzclpGB4BuXX9zSR/DkBZb/5saXSDsVy1L2lkAc3rNW23cvZcbePLpvX2K/g7X9nN5bzxn
        Adj8jk2L5Nfen+r0r80JP17zJ/kswEuk4zM8AMTO/jfAjKqO/nr3vf7vdhpwZsOClJzy88cpPtjDtf3x
        ngbU24LLAz7xKAWnAR/wd4YPy+gAwPv/TmdgMD2Id8CMFtv/360fwJSqClH5Ygv6ASROV9Y8e0VWVXsk
        45cAx5E2w5BqEoATJpTsf/ov8wATbSWi7I/NCACJ0dekhTz6Vz91eSYHAL7uO3AOmn+oKwDabwKw+07A
        JLcovi+InoCJ0Xu03JnEAWDhSxl6QYjdvhy9/yxw39+YMe6eA0D3RCACQGIuB+mMDM/o9X92dgWN/vXm
        xR8wpJIdgMV7nv/fTx5g2lKv8G4NIwD0XTd6o20DfdEMXv9zAtDtDmbRw7gRZlR1AnB+fKO/XAZckDPL
        Mp2B0zgAfEkq45uBKl9cn/EJQFQAKpLTGdq1938cGj3eKVw3rcTVYH3TDl80/J88/fdub8v4AHAcTgCq
        0+TJlfqV3/EGACstA9L4duCb5ndEBvlRAhy7+fcNmFHVIaDyXgUAszeAFS4I5Uo9buAZTwA4zDptwT/x
        dUScfDPwim0bEABIo0n/hBlV9QAs67EIaG/iFuFWyAPE1U8geef5D0SP+zojx1AQ0BZE2xAASDmkj2BI
        NQFg0qTeBwBeBlzkmi1Kn25SGgTi7ieQvPP8B1L8s2R+Z6tWEUUXIDMAzCN9AUOmTwDQk4FjnMJx9TK1
        ASCefgLJPc/fW71A79e3+Upwb6av/z2eZjMA8PXf/wdDplcA0GcBnjmi7Jkm5UFgn/0Ekn+evzf6irTU
        v3WN5utqw+jv9V5lBoAgzKhOe70HoBezANvlS5TnAfR+An/q1k+g5mhxdCgl5/l7o2dIJ/LWn68zggBQ
        UNBAquMA0Aojqm0F1qtdgL0UBs15uFH5jsCu/QSCqTrPH68+JpX4OyI09cdFoDrcB3Dq1FYOAFfBiCrr
        ALwHHgBkEMiu8YvKrRY5Jpza8/zx6jZ6b4bqoz9agJsBIKjZbIEB9BBeCyOqrASsOnDzm+3CJrqF68cr
        LXNM2GLq8HWEz2fjl0TXwfjdA4DdHuCLQG6AGVWeBViw51XgB5AQvNBRIuY+0miZk4IWEU/9y+e1r9Oq
        aOq/oBPT/936ANQNogfxJhgxPU4D9jQTmLqoUpRvXoOZgKGdpKuropEhXPJbhbX/nicBSQfTg3gLjKhO
        ubnL4+8HEMeuQO6ahcK7LYwg0NH6gK8jomf9K6NrYfi9BQCXSw8At8KI6mSzVe/7SrADmAWMvdAtCn60
        XPiiGW3+50hn88hfvOUWbemOjTA8AkCaXgpyAEFg3GSPcN9cnanmj9LIf3FVtEWr6FxPoz/2/BEA+mk1
        4D51foGYMK1IeO6ozbSlwA7S9PKuZs3f0aZ5O2D+eALA7TCi2kRgn7cC97YzMNIhJmQX6TMBb3s4Q7b7
        WmcuaA9rPjI/BwCwH8j83A5sID2Ey2RHoHshFQrdO2PGkt9MmFD82PjxszYlUuPGFm2alDfvsdn3N7wk
        a+H7q/k3kyaVvdam+aKtmrcTxT49UlgY0oqLuRw4OJgvBiUNhdQoP7/msOzsxUdOn77oyOzsxGry+b4j
        Zt0UPJkMEpG34fa3rb4HvR2t53DCz0ejv78d231x4XaHtKKievNmYEihcnNXaJdc4if5Eq7Jk7zanHvq
        NW80cjCZpYL0aj8x/ye8z086yRz1vSjzBWA3hNDmt6/Rp8Yln6zlWviJxh55Wi8JeL1fSWv9IXy2v7zz
        ckz7AdgfHAD87RH9MAyZ5Vh6rSe9mYaj/q2kc8tf5mRfRPN2rdWqNt+AXzAAPcHbYmVbf6DxqLmwY/0A
        X2dkvH5SrqP1Q4sbn2crT5Fmkw71d5D5oxE9qAEAegmfizfOxtOsoCN8CJnKQfq1BQMBG38L6VJfNHyC
        T85gFr/aqJVvvwy/SAAOFD4ZN2s775eHZSBoPZxmBvlksLtJf1ds/E9JT5IW0Uh/ysJ2PXeh+brCmh9r
        fQASOBugaXRVu9Eog7vl0LJgKAUEXhqESc+ncOvw36SX+c4+kpN0bFV7m/y+IqjqAyCZVHVFtIUvt+n9
        8gzTbeBlAt+eO5PUpvfT72h9h/RFAlt0v0f6C+kG466+yOm+zrZBZueeiq4WrRLHeAFILYYBOU9gGPGz
        9/P59UhaLozwG4m4VtKdpD+SXif9g/SBzNJ/3k2fyrzCu6S3pNl/q+/fd7bO5+o90gn+rnUDzX+T5d52
        Oxl/PX4RAKikWTRrZS/qiULNHJX18/Vd6+k1PIQ+PoZeT/V1csut8BT6vIA0i8xdzE04SS5SNv3ZBfT6
        XZrGH0cGP7xqW0uWOdNg+elj7xtXa74dMD0A1g0IjzVrOR+2af5oyy4BoXcytu/KNi/XvNub8aYCAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPrG
        /wOW4DtnnyWxcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>